#!/usr/bin/env python3

name = 'tuning_yfactor_v1v2_plot'

import os, sys
import matplotlib.pyplot as plt
import std_msgs.msg
import pandas

import necstdb

parser = argparse.ArgumentParser(description = 'search optical Lo Att voltage value')

parser.add_argument('file_name', type = str, help = 'saved file name when measure Y-factor of tuning SIS voltage')
parser.add_argument('sive_name', type = str, help = 'set saving v1-v2 graph file name')

args = parser.parse_args()

db = necstdb.necstdb()
db.open(args.file_name)

d = db.read_as_pandas()
d['time'] = pandas.to_datetime(d['time'], unit='s')
d['data'] = [_[0][data] for _ in d['msgs']]
d2 = d.set_index(['topic', 'time']).sort_index()

dd = pandas.concat(
    [
        d2.loc['/tz2019/sis_v1/v'][['data']].rename(columns={'data': 'V1V'}).astype(float).resample('0.1S').mean(),
        d2.loc['/tz2019/sis_h1/v'][['data']].rename(columns={'data': 'H1V'}).astype(float).resample('0.1S').mean(),
        d2.loc['/tz2019/sis_v2/v'][['data']].rename(columns={'data': 'V2V'}).astype(float).resample('0.1S').mean(),
        d2.loc['/tz2019/sis_h2/v'][['data']].rename(columns={'data': 'H2V'}).astype(float).resample('0.1S').mean(),
    ],
    axis = 1,
)

#under the v1-v2 graph plot

fig = plt.figure()
ax = [plt.add_subplot(12i) for i in range(1:3)]

ax[0].hist2d(dd['V1V'], dd['H1V'])
ax[1].hist2d(dd['V2V'], dd['H2V'])
ax[0].set_title('Y-factor(USB)')
ax[1].set_title('Y-factor(LSB)')
[_.set_xlabel('V1 [mV]') for _ in ax]
[_.set_ylabel('V2 [mV]') for _ in ax]

cb = plt.colorbar()
cb.set_label('Y-factor [K]')

plt.savefig(args.save_name)
plt.show()
